import Head from 'next/head'
import variables from './../styles/home.module.scss'
import React from 'react';

export default function Home() {

  const [phaser, setPhaser] = React.useState<typeof Phaser | undefined>()

  var pidgeon: Phaser.Types.Physics.Arcade.ImageWithDynamicBody;
  var cursor: Phaser.GameObjects.Image;

  React.useEffect(() => {
    import('phaser').then(setPhaser);
  }, [])

  React.useEffect(() => {
    console.log("phaser", phaser)
    if (phaser) {
      const baseConfig = {
        type: phaser.AUTO,
        width: '100%',
        height: '100%',
        // scene: [PGame],
        autoResize: true,
        parent: 'game-container',
        scale: {
          mode: window.Phaser.Scale.FIT,
        },
        physics: {
          default: 'arcade',
          arcade: { debug: true }
        },
      };
      const config = {
        ...baseConfig,
        scene: {
          preload,
          create,
          update,
        },
      }
      const game = new phaser.Game(config);
    }

  }, [phaser])

  function changeSpriteFromAngle(angle: number, pidgeon: Phaser.Types.Physics.Arcade.ImageWithDynamicBody) {
    switch (true) {
      case (angle > -45 && angle < 45):
        pidgeon.setTexture("p3").setFlipX(true)
        break
      case (angle > 45 && angle < 135):
        pidgeon.setTexture("pf3").setFlipX(false)
        break
      case (angle > -135 && angle < -45):
        pidgeon.setTexture("pt4").setFlipX(false)
        break
      default:
        pidgeon.setTexture("p3").setFlipX(false)
        break

    }
  }
  function preload(this: Phaser.Scene) {
    this.load.image('pic', '/background.png');

    this.load.image('pf3', '/pf3.png');
    this.load.image('pt4', '/pt4.png');
    this.load.image('p3', '/p3.png');

    this.load.image('pt4-2', '/pt4-2.png');
    this.load.image('cursor', '/drawcursor.png');

  }
  function create(this: Phaser.Scene) {
    this.add.image(this.game.canvas.width / 2, this.game.canvas.height / 2, 'pic').setScale(0.5)
    cursor = this.add.image(0, 0, 'cursor').setVisible(false);
    pidgeon = this.physics.add.image(this.game.canvas.width / 2, this.game.canvas.height / 2, 'p3').setScale(0.2)
  }
  function update(this: Phaser.Scene) {
    const self = this;
    this.input.on('pointermove', (pointer: Phaser.Input.Pointer) => {
      cursor.setVisible(true).setPosition(pointer.x, pointer.y);
      self.physics.moveToObject(pidgeon, pointer, 150);
      var angleDeg = (Math.atan2(pointer.y - pidgeon.y, pointer.x - pidgeon.x) * 180 / Math.PI);
      // console.log(angleDeg)
      changeSpriteFromAngle(angleDeg, pidgeon)
    })

  }
  return (
    <>
      <Head>
        <title>Pidgeon Phaser</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={variables.main}>
        <div id="game-container" />
      </main>
    </>
  )
}
